{"version":3,"sources":["components/TabIteam/TabIteam.js","components/Tabs/Tabs.js","App.js","reportWebVitals.js","index.js"],"names":["TabItem","tab","index","onClick","isActive","renderTab","className","label","calculateTransform","tabs","activeTab","length","indexOf","defaultProps","Tabs","onChange","map","Object","is","style","width","transform","tabList","customRender","customRenderSecond","App","useState","setActiveTab","onTabSelected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAGaA,G,MAAU,SAAC,GAAD,IACrBC,EADqB,EACrBA,IACAC,EAFqB,EAErBA,MACAC,EAHqB,EAGrBA,QACAC,EAJqB,EAIrBA,SACAC,EALqB,EAKrBA,UALqB,OAOrB,oBACEC,UAAWF,EACP,iCACA,YACJD,QAAS,kBAAMA,KAJjB,SAMIE,EAEEA,EAAUJ,EAAKC,GADfD,EAAIM,UCbZ,SAASC,EAAmBC,EAAMC,GAIhC,OAHiB,IAAMD,EAAKE,OACXF,EAAKG,QAAQF,GAEDD,EAAKE,ODepCX,EAAQa,aAAe,CACrBR,UAAW,MCbN,IAAMS,EAAO,SAAC,GAAD,IAClBL,EADkB,EAClBA,KACAC,EAFkB,EAElBA,UACAK,EAHkB,EAGlBA,SACAV,EAJkB,EAIlBA,UAJkB,OAMlB,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,SACGG,EAAKO,KAAI,SAACf,EAAKC,GAAN,OACR,cAAC,EAAD,CACEE,SAAUa,OAAOC,GAAGR,EAAWT,GAC/BA,IAAKA,EACLC,MAAOA,EACPC,QAAS,kBAAMY,EAASd,IACxBI,UAAWA,GACNH,QAIX,qBACEI,UAAU,eACVa,MAAO,CACLC,MAAM,eAAD,OAAiBX,EAAKE,QAC3BU,UAAU,aAAD,OAAeb,EAAmBC,EAAMC,GAAxC,gBAOjBI,EAAKD,aAAe,CAClBR,UAAW,MCtCb,IAAMiB,EAAU,CACd,CACE,MAAS,IACT,MAAS,WAEX,CACE,MAAS,IACT,MAAS,WAEX,CACE,MAAS,IACT,MAAS,YAEX,CACE,MAAS,IACT,MAAS,aAIPC,EAAe,SAACtB,GACpB,MAAM,GAAN,OAAUA,EAAIM,MAAd,kBAGIiB,EAAqB,SAACvB,EAAKC,GAC/B,MACQ,GAAN,OAAUD,EAAIM,MADZL,EAAQ,IAAM,EAChB,gBAEA,kBAoCWuB,MAhCf,WAAgB,IAAD,EACWC,mBAASJ,GADpB,mBACNb,EADM,aAEqBiB,mBAASJ,EAAQ,KAFtC,mBAENZ,EAFM,KAEKiB,EAFL,KAIPC,EAAgB,SAAC3B,GACrB0B,EAAa1B,IAGf,OACE,sBAAKK,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,wBACA,cAAC,EAAD,CACEG,KAAMA,EACNC,UAAWA,EACXK,SAAUa,IAEZ,cAAC,EAAD,CACEnB,KAAMA,EACNC,UAAWA,EACXK,SAAUa,EACVvB,UAAWkB,IAEb,cAAC,EAAD,CACEd,KAAMA,EACNC,UAAWA,EACXK,SAAUa,EACVvB,UAAWmB,QCjDJK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eab6bc4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const TabItem = ({\r\n  tab,\r\n  index,\r\n  onClick,\r\n  isActive,\r\n  renderTab\r\n}) => (\r\n  <li\r\n    className={isActive\r\n      ? 'tabs__tab tabs__tab--is-active'\r\n      : 'tabs__tab'}\r\n    onClick={() => onClick()}\r\n  >\r\n    {!renderTab\r\n      ? tab.label\r\n      : renderTab(tab, index)\r\n    }\r\n  </li>\r\n);\r\n\r\nTabItem.defaultProps = {\r\n  renderTab: null,\r\n}\r\n\r\nTabItem.propTypes = {\r\n  tab: Proptypes.shape({\r\n    value: Proptypes.string.isRequired,\r\n    label: Proptypes.string.isRequired,\r\n  }),\r\n  activeTab: Proptypes.shape({\r\n    value: Proptypes.string.isRequired,\r\n    label: Proptypes.string.isRequired,\r\n  }),\r\n  index: Proptypes.number.isRequired,\r\n  onClick: Proptypes.func.isRequired,\r\n  renderTab: Proptypes.func,\r\n}","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\nimport { TabItem } from '../TabIteam/TabIteam';\r\n\r\nfunction calculateTransform(tabs, activeTab) {\r\n  const tabWidth = 100 / tabs.length;\r\n  const tabIndex = tabs.indexOf(activeTab);\r\n\r\n  return tabWidth * tabIndex * tabs.length;\r\n}\r\n\r\nexport const Tabs = ({\r\n  tabs,\r\n  activeTab,\r\n  onChange,\r\n  renderTab\r\n}) => (\r\n  <div className=\"tabs\">\r\n    <ul className=\"tabs__list\">\r\n      {tabs.map((tab, index) => (\r\n        <TabItem\r\n          isActive={Object.is(activeTab, tab)}\r\n          tab={tab}\r\n          index={index}\r\n          onClick={() => onChange(tab)}\r\n          renderTab={renderTab}\r\n          key={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n    <div\r\n      className=\"tabs__slider\"\r\n      style={{\r\n        width: `calc(100% / ${tabs.length}`,\r\n        transform: `translate(${calculateTransform(tabs, activeTab)}%, 0)`\r\n      }}\r\n    >\r\n    </div>\r\n  </div>\r\n);\r\n\r\nTabs.defaultProps = {\r\n  renderTab: null,\r\n}\r\n\r\nTabs.propTypes = {\r\n  tabs: Proptypes.arrayOf(Proptypes.shape({\r\n    value: Proptypes.string.isRequired,\r\n    label: Proptypes.string.isRequired,\r\n  })),\r\n  activeTab: Proptypes.shape({\r\n    value: Proptypes.string.isRequired,\r\n    label: Proptypes.string.isRequired,\r\n  }),\r\n  onChange: Proptypes.func.isRequired,\r\n  renderTab: Proptypes.func,\r\n}","import React, { useState } from 'react';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nconst tabList = [\n  {\n    'value': '1',\n    'label': 'Tab One'\n  },\n  {\n    'value': '2',\n    'label': 'Tab Two'\n  },\n  {\n    'value': '3',\n    'label': 'Tab Tree'\n  },\n  {\n    'value': '4',\n    'label': 'Tab Four'\n  },\n]\n\nconst customRender = (tab) => {\n  return `${tab.label} \\u{1F384}`\n}\n\nconst customRenderSecond = (tab, index) => {\n  if (index % 2 === 0) {\n    return `${tab.label} \\u{1F427}`\n  } else {\n    return `${tab.label} \\u{1F98A}`\n  }\n}\n\nfunction App() {\n  const [tabs, setTabs] = useState(tabList)\n  const [activeTab, setActiveTab] = useState(tabList[0]);\n\n  const onTabSelected = (tab) => {\n    setActiveTab(tab)\n  }\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">React tabs</h1>\n      <Tabs\n        tabs={tabs}\n        activeTab={activeTab}\n        onChange={onTabSelected}\n      />\n      <Tabs\n        tabs={tabs}\n        activeTab={activeTab}\n        onChange={onTabSelected}\n        renderTab={customRender}\n      />\n      <Tabs\n        tabs={tabs}\n        activeTab={activeTab}\n        onChange={onTabSelected}\n        renderTab={customRenderSecond}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}